<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.developer.myapp.reply.dao.IReplyRepository">

	<select id="selectMaxBoardReplyNumber" resultType="int">
		select
		nvl(max(board_reply_number),2000) as "boardReplyNumber"
		from board_reply
	</select>


<!--댓글등록-->

	<insert id="insertReply"
		parameterType="com.developer.myapp.reply.model.ReplyVO">
		insert into board_reply
		(board_reply_number, emp_id,jh_id,user_id,reply_insert_date,content)
		values
		<choose>
		<when test="empId != 0">
		(board_reply_number_SEQ.nextval,#{empId}, null, #{userId},SYSDATE,#{replyContent})
		</when>
		<when test="jhId != 0">
		(board_reply_number_SEQ.nextval,null,#{jhId},#{userId},SYSDATE,#{replyContent})
		</when>
		<otherwise></otherwise>
		</choose>

	</insert>
 <!-- 순서대로 댓글 보여주기-->
	<!--  <insert id="updateReplyNumber" parameterType="map">
		update board_reply
		set
		board_reply_number = board_reply_number+1
		where user_id = #{userId} and board_reply_number > #{boardReplyNumber}

	</insert>-->
	
	
	
	
<!-- 댓글 리스트-->
	<select id="empReplyList" parameterType="int"
		resultType="com.developer.myapp.reply.model.ReplyVO">
		select
		board_reply_number as "boardReplyNumber",
		emp_id as "empId",
		jh_id as
		"jhId",
		user_id as "userId",
		reply_insert_date as "replyInsertDate",
		content as "replyContent"

		from board_reply
		where emp_id = #{empId}
		order by board_Reply_Number desc
		
	
	</select>
	<select id="jhReplyList" parameterType="int"
		resultType="com.developer.myapp.reply.model.ReplyVO">
		select
		board_reply_number as "boardReplyNumber",
		emp_id as "empId",
		jh_id as
		"jhId",
		user_id as "userId",
		reply_insert_date as "replyInsertDate",
		content as "replyContent"

		from board_reply
		where jh_id = #{jhId}
		order by board_Reply_Number desc
		
	
	</select>

	<select id="selectReply" parameterType="int"
		resultType="com.developer.myapp.reply.model.ReplyVO">
		select
		board_reply_number as "boardReplyNumber",
		emp_id as "empId",
		jh_id as "jhId",
		user_id as "userId",
		reply_insert_date as "replyInsertDate",
		content as "replyContent"

		from board_reply
		where board_reply_number =#{boardReplyNumber}

	</select>

	<select id="selectDeleteReply" parameterType="map"
		resultType="string">
		select
		emp_id as "empId"
		from
		Board_Reply
		where
		board_reply_number = #{boardReplyNumber} and user_id=#{userId}

	</select>



<!-- 댓글삭제 -->
	<delete id="deleteReplyByReplyId" parameterType="map">
		delete from
		Board_Reply
		where
		board_reply_number = #{boardReplyNumber} and user_id=#{userId}
	</delete>






</mapper>